<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" this:Main.in_CBTBankURL="https://securentrycorp.calbanktrust.com/"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_Browser" Type="OutArgument(ui:Browser)" />
    <x:Property Name="in_CBTBankURL" Type="InArgument(x:String)" />
    <x:Property Name="out_IsSuccessful" Type="OutArgument(x:Boolean)" />
    <x:Property Name="in_NotificateTo" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Main_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath</x:String>
      <x:String>System.Net</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Interop</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow login to CBT portal using Orchestrator credentials" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="CBTPassword" />
      <Variable x:TypeArguments="x:String" Name="CBTLogin" />
    </Sequence.Variables>
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_7" Text="// Get CBT credentials from Ochestrator" />
    <ui:GetRobotCredential TimeoutMS="{x:Null}" AssetName="CBT_Credentials" DisplayName="Get CBT Credentials" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[CBTPassword]" Username="[CBTLogin]" />
    <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_11" Level="Info" Message="[&quot;Opening browser and navigate to CBT page&quot;]" />
    <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_6" Text="// To open Internet Explorer browser and navigate to California Bank of Trust login page" />
    <ui:OpenBrowser BrowserType="IE" DisplayName="Open Internet Explorer Browser" Hidden="False" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" NewSession="True" Private="False" UiBrowser="[out_Browser]" Url="[in_CBTBankURL]">
      <ui:OpenBrowser.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence sap2010:Annotation.AnnotationText="At this step, we fill out the login form and send it using the shortcut keys : TAB- for navigate trough fields and  Enter to send form" DisplayName="Login form filing" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ErrorBoxText" />
            </Sequence.Variables>
            <ui:WindowScope ApplicationWindow="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" Window="{x:Null}" DisplayName="Attach Window 'iexplore.exe Welcome'" sap2010:WorkflowViewState.IdRef="WindowScope_1" InformativeScreenshot="ff67ba3d42a271636f11639dfd3411a1" Selector="&lt;html title='Treasury*' /&gt;">
              <ui:WindowScope.Body>
                <ActivityAction x:TypeArguments="x:Object">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
                  </ActivityAction.Argument>
                  <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
                </ActivityAction>
              </ui:WindowScope.Body>
            </ui:WindowScope>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Clicking login button&quot;]" />
            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_9" Text="// Click login button to move to login form" />
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click login button" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="8bf6fb15c3efdfcd900a17cbf6508068" Selector="&lt;webctrl id='login' tag='A' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type login" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="True" SimulateType="False" Text="[CBTLogin]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1b95d994362b53ac465d8d96cf6e4bb9" Selector="&lt;webctrl id='publicCred1' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Hotkey tab to swith to password field" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_1" Key="tab" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:TypeSecureText DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Secure password" EmptyField="True" sap2010:WorkflowViewState.IdRef="TypeSecureText_1" SecureText="[CBTPassword]" SendWindowMessages="True" SimulateType="False">
              <ui:TypeSecureText.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[out_Browser]" WaitForReady="INTERACTIVE" />
              </ui:TypeSecureText.Target>
            </ui:TypeSecureText>
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_12" Level="Info" Message="[&quot;Sending login form&quot;]" />
            <ui:SendHotkey DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Send Enter Hotkey to send login form" EmptyField="False" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="enter" KeyModifiers="None" SendWindowMessages="False" SpecialKey="True">
              <ui:SendHotkey.Target>
                <ui:Target ClippingRegion="{x:Null}" Selector="{x:Null}" TimeoutMS="{x:Null}" Element="[out_Browser]" WaitForReady="INTERACTIVE" />
              </ui:SendHotkey.Target>
            </ui:SendHotkey>
            <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Successful login check placeholder" />
            <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Successful login check&quot;]" />
            <ui:UiElementExists DisplayName="Useful resources button exist" Exists="[out_IsSuccessful]" sap2010:WorkflowViewState.IdRef="UiElementExists_1">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" InformativeScreenshot="4d766f50103e65f44ee2d8f3db9df099" Selector="&lt;webctrl aaname='Useful Resources' tag='BUTTON' /&gt;" TimeoutMS="3000" WaitForReady="INTERACTIVE" />
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If sap2010:Annotation.AnnotationText="If login was unsuccessful, we need to define the type of exception and sand notification email." Condition="[out_IsSuccessful]" DisplayName="If login was successful" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_10" Level="Info" Message="[&quot;Login Success&quot;]" />
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Send email with error message" sap2010:WorkflowViewState.IdRef="Sequence_15">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="CBTErrorMessage" />
                  </Sequence.Variables>
                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_8" Text="// If login was unsuccessful, we need to define the type of exception." />
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="Error" Message="[&quot;Login error was found&quot;]" />
                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Get text of HTML element which comnains error messages" />
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Error box text" sap2010:WorkflowViewState.IdRef="GetValue_1">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="48c4e8c992b70ce415669afb2196d613" Selector="&lt;webctrl css-selector='body&amp;gt;div&amp;gt;div' tag='DIV' /&gt;" WaitForReady="INTERACTIVE" />
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[ErrorBoxText]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_5" Text="// Assign the exception value (if the exception text contains &quot;Invalid information entered.&quot;, Then ErrorMessage equals = Invalid credentials Else - &quot;Unknown login error&quot;)" />
                  <Assign DisplayName="Assign error text" sap2010:WorkflowViewState.IdRef="Assign_6">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[CBTErrorMessage]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[If(ErrorBoxText.Contains("Invalid information entered"), "Invalid information entered", "Unknown login error")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="Info" Message="[&quot;Error message : &quot;+CBTErrorMessage]" />
                  <ui:LogMessage DisplayName="Log Message" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[&quot;Sending error email notification&quot;]" />
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke EmailNotification workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Workflows\Reusable elements\EmailNotification.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="in_EmailTo">[in_NotificateTo]</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Subject">California bank Trust: Error</InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="in_Body">California bank Trust login error: Invalid information entered.</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <ui:Comment sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Throwing exception according to unsuccessful login" />
                  <Throw Exception="[new Exception(CBTErrorMessage)]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                </Sequence>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:OpenBrowser.Body>
    </ui:OpenBrowser>
    <sads:DebugSymbol.Symbol>d0lFOlxEb2N1bWVudHNcVWlQYXRoXEFkdmFudGFnZSBTb2x1dGlvbnNcQVNcQVJcV29ya2Zsb3dzXENCVFxMb2dpbkNCVC54YW1sRgFSAXsBAk4DyAEOAgEBUwVTbgIBVFQFVNcBAgFOVQVVrgECAUxWBVafAQIBS1cFxgEWAgECVDtUTAIBU1TIAVTUAQIBUVSvAVS+AQIBT1VzVasBAgFNV74BV80BAgFJV9IBV+MBAgFHXQvDARYCAQNhDWoeAgFEaw1rogECAUJsDWx6AgFBbQ17GAIBP3wNgAEbAgE7gQENhQEdAgE5hgENigEhAgE0iwENiwGgAQIBMowBDZABHQIBLpEBDZEBdAIBLZIBDZIBowECASuTAQ2XASICASaYAQ3CARICAQRhnQJhvwICAUZnE2eLAQIBRWt6a58BAgFDeaABecYBAgFAfqABftABAgE+fJYCfKICAgE8gQGLAoEBkAICATqIAWeIAXYCATeGAYMChgGSAgIBNYsBe4sBnQECATOOAWeOAXYCATCMAYUCjAGMAgIBL5IBepIBoAECASyVAYsBlQHFAQIBKpUB0AGVAdYBAgEpkwFUkwFoAgEnmAGfAZgBswECAQWaARGaAZ8BAgEknQERwAEcAgEHmgF/mgGcAQIBJaEBE6EBmwECASOiAROiAakBAgEhowETowGOAQIBIKQBE6sBIQIBHKwBE6wBkwICARutARO0ARwCARa1ARO1AbMBAgETtgETtgGzAQIBEbcBE70BKwIBC74BE74BigECAQq/ARO/AXMCAQiiAYEBogGmAQIBIqkBP6kBTQIBHaYBpgGmAe0BAgEfsgE+sgGuAQIBGa8BP68BUAIBF7UBgAG1AbABAgEUtgGAAbYBsAECARK7AU67AY0BAgEQugFRugFtAgEPuQFRuQFiAgENtwHMAbcBgAICAQy/ASS/AUYCAQk=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Comment_7" sap:VirtualizedContainerService.HintSize="711,55" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="711,22" />
      <sap2010:ViewStateData Id="LogMessage_11" sap:VirtualizedContainerService.HintSize="711,91" />
      <sap2010:ViewStateData Id="Comment_6" sap:VirtualizedContainerService.HintSize="711,93" />
      <sap2010:ViewStateData Id="MaximizeWindow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WindowScope_1" sap:VirtualizedContainerService.HintSize="675,168" />
      <sap2010:ViewStateData Id="LogMessage_3" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="Comment_9" sap:VirtualizedContainerService.HintSize="675,55" />
      <sap2010:ViewStateData Id="Click_2" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="675,134" />
      <sap2010:ViewStateData Id="SendHotkey_1" sap:VirtualizedContainerService.HintSize="675,116" />
      <sap2010:ViewStateData Id="TypeSecureText_1" sap:VirtualizedContainerService.HintSize="675,68" />
      <sap2010:ViewStateData Id="LogMessage_12" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="SendHotkey_2" sap:VirtualizedContainerService.HintSize="675,116" />
      <sap2010:ViewStateData Id="Comment_3" sap:VirtualizedContainerService.HintSize="675,55" />
      <sap2010:ViewStateData Id="LogMessage_5" sap:VirtualizedContainerService.HintSize="675,91" />
      <sap2010:ViewStateData Id="UiElementExists_1" sap:VirtualizedContainerService.HintSize="675,106" />
      <sap2010:ViewStateData Id="LogMessage_10" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Comment_8" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="LogMessage_6" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Comment_1" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Comment_5" sap:VirtualizedContainerService.HintSize="314,112" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_8" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="LogMessage_9" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Comment_2" sap:VirtualizedContainerService.HintSize="314,74" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="336,1406">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="675,1580">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="697,3423">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="OpenBrowser_1" sap:VirtualizedContainerService.HintSize="711,3522" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="733,4094">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="773,4174" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>