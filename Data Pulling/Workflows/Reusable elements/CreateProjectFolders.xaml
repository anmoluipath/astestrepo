<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_AccountingPath" Type="InArgument(x:String)" />
    <x:Property Name="in_AcctgPath" Type="InArgument(x:String)" />
    <x:Property Name="out_PathDictionary" Type="OutArgument(scg:Dictionary(x:String, x:String))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>376.8,2399.2</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workfow create all project folders (if not exist)" sap:VirtualizedContainerService.HintSize="336.8,2319.2" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="314.4,92.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Generating project folders&quot;]" />
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// Initialize output dictionary" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
      <Assign.To>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[out_PathDictionary]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:String)">[new Dictionary(of String,String)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_2" Text="// Get Bank deposit records folder path" />
    <Assign DisplayName="Get bank deposit records path" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_9">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("BankDepositRecords")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_AccountingPath + "\BANK DEPOSIT RECORDS\" + String.Format("{0:yyyy}", DateTime.Now)+"\"+Date.Now.AddDays(-1).ToString("MM-yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_3" Text="// Get daily deposits folder path" />
    <Assign DisplayName="Get daily deposit path" sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_10">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("DailyDeposits")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String" xml:space="preserve">[out_PathDictionary("BankDepositRecords") + "\DAILY DEPOSITS\" +  Date.Now.AddDays(-1).ToString("dd.MM.yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_9" Text="// get Backup folder path" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("Backup")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[out_PathDictionary("DailyDeposits")+"\Backup"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_4" Text="// get MARKETING GROUP folder path" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_15">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("MarketingGroup")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[out_PathDictionary("BankDepositRecords") + "\MARKETING GROUP"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_5" Text="// get EDI WIRES folder path" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("EdiWires")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[out_PathDictionary("MarketingGroup") + "\EDI WIRES\" + Date.Now.AddDays(-1).ToString("dd.MM.yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_6" Text="// get GEN WIRES folder path" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("GenWires")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[out_PathDictionary("DailyDeposits")+"\GEN WIRE"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_7" Text="// get bank records folder path" />
    <Assign sap:VirtualizedContainerService.HintSize="314.4,60" sap2010:WorkflowViewState.IdRef="Assign_14">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_PathDictionary("BankRecords")]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_AcctgPath + "\" + Environment.UserName.Replace("."," ") + "\DAILY DEPOSITS\bank records\" + Date.Now.AddDays(-1).ToString("dd.MM.yyyy")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="If  Directory.Exists(DailyDepositsDir) Then My.Computer.FileSystem.DeleteDirectory(DailyDepositsDir, FileIO.DeleteDirectoryOption.DeleteAllContents)&#xD;&#xA;If  Directory.Exists(AccountsDailyDeposits) Then My.Computer.FileSystem.DeleteDirectory(AccountsDailyDeposits, FileIO.DeleteDirectoryOption.DeleteAllContents)&#xD;&#xA;If  Directory.Exists(EdiWires) Then My.Computer.FileSystem.DeleteDirectory(EdiWires, FileIO.DeleteDirectoryOption.DeleteAllContents)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314.4,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="DailyDepositsDir">[out_PathDictionary("BankRecords")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="AccountsDailyDeposits">[out_PathDictionary("DailyDeposits")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="EdiWires">[out_PathDictionary("EdiWires")]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314.4,56" sap2010:WorkflowViewState.IdRef="Comment_8" Text="// create directiories if not exist" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="If Not Directory.Exists(BankDepositPath) Then Directory.CreateDirectory(BankDepositPath)&#xA;If Not Directory.Exists(GenWiresPath) Then Directory.CreateDirectory(GenWiresPath)&#xA;If Not Directory.Exists(EdiWiresPath) Then Directory.CreateDirectory(EdiWiresPath)&#xA;If Not Directory.Exists(BankRecordsPath) Then Directory.CreateDirectory(BankRecordsPath)&#xA;If Not Directory.Exists(BackupPath) Then Directory.CreateDirectory(BackupPath)" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314.4,164.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="BankDepositPath">[out_PathDictionary("BankDepositRecords")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="GenWiresPath">[out_PathDictionary("GenWires")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="EdiWiresPath">[out_PathDictionary("EdiWires")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="BankRecordsPath">[out_PathDictionary("BankRecords")]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="BackupPath">[out_PathDictionary("Backup")]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>